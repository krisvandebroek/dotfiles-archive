[core]
	excludesfile = ~/.gitignore_global
	editor = vim

[alias]
	update-submodules = submodule update --init --recursive

	# View abbreviated SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph --abbrev-commit

	# View the current working tree status using the short format
	s = status -s

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	dc = diff --cached

	fp = !"git fetch --prune; git pull" 


	# Do a git fetch, pruning obsolete remote branches, on all subdirectories
	subdirs-fetch = !"find . -type d -d 1 -exec sh -c '(cd {} && pwd && git fetch --prune)' ';'"
	# List the remote branches for all subdirectories
	subdirs-branches = !"find . -type d -d 1 -exec sh -c '(cd {} && pwd && git branch -r)' ';'"
	# Checkout feature branch which starts with given argument (eg. `git checkf ISACONB-666`)
	checkf = "!f() { git for-each-ref */*/feature/$1* */*/*/feature/$1* --format='%(refname:short)' --count=1 | sed 's/origin\\///' | xargs git checkout; }; f"
	# Remove all local branches which are already merged to develop (no impact on remote existence of branch) (eg. `git cleanf`)
	cleanf = "!f() { git branch --merged develop | grep '^  feature' | xargs git branch -d; }; f"



# Allow local customizations in the .gitconfig_local file
[include]
	path = ~/.gitconfig_local

[color]

	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = auto

[color "branch"]

	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]

	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]

	added = yellow
	changed = green
	untracked = cyan

[push]
	default = simple

[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 

[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
